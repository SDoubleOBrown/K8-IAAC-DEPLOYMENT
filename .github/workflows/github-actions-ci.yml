name: Terraform Deployment
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v4.0.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: 1.1.7
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}  # Replace with your Terraform Cloud API token

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform

    - name: Validate Terraform
      run: terraform validate -no-color
      working-directory: ./terraform

    - name: Plan Terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -no-color
      continue-on-error: true
      working-directory: ./terraform

    - name: Apply Terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve -input=false 
      working-directory: ./terraform
    
    - name: Update kube config
      env:
        CLUSTER_NAME: eks-cluster  
      run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }}
    